<?xml version="1.0"?>
<ruleset name="Dogma">
    <rule ref="../../../../consistence/coding-standard/Consistence/ruleset.xml" />

    <rule ref="../../../../slevomat/coding-standard/SlevomatCodingStandard/ruleset.xml">
        <exclude name="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming.SuperfluousSuffix"/>
        <exclude name="SlevomatCodingStandard.Commenting.DisallowOneLinePropertyDocComment.OneLinePropertyComment"/>
        <exclude name="SlevomatCodingStandard.Commenting.DocCommentSpacing.IncorrectLinesCountBetweenDescriptionAndAnnotations"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.DisallowEmpty.DisallowedEmpty"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator.DisallowedShortTernaryOperator"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.EarlyExit.EarlyExitNotUsed"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.EarlyExit.UselessElse"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.EarlyExit.UselessElseIf"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.RequireYodaComparison.RequiredYodaComparison"/>
        <exclude name="SlevomatCodingStandard.Files.TypeNameMatchesFileName.NoMatchBetweenTypeNameAndFileName"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameAfterKeyword.NonFullyQualifiedExtends"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameAfterKeyword.NonFullyQualifiedImplements"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions.NonFullyQualifiedException"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalConstants.NonFullyQualified"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedGlobalFunctions.NonFullyQualified"/>
        <exclude name="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly.ReferenceViaFullyQualifiedName"/>
        <exclude name="SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces.NonFullyQualified"/>
        <exclude name="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPostDecrementOperator"/>
        <exclude name="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPostIncrementOperator"/>
        <exclude name="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPreDecrementOperator"/>
        <exclude name="SlevomatCodingStandard.Operators.DisallowIncrementAndDecrementOperators.DisallowedPreIncrementOperator"/>
        <exclude name="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.IncorrectWhitespaceAfterDeclare"/>
        <exclude name="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.IncorrectWhitespaceBetweenOpenTagAndDeclare"/>
        <exclude name="SlevomatCodingStandard.TypeHints.TypeHintDeclaration.UselessDocComment"/><!-- not taking @throws into account -->
        <exclude name="SlevomatCodingStandard.Types.EmptyLinesAroundTypeBraces.NoEmptyLineAfterOpeningBrace"/>

        <exclude-pattern>testClass</exclude-pattern>
        <exclude-pattern>TestClass</exclude-pattern>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true" />
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameAfterKeyword">
        <properties>
            <property name="keywordsToCheck" type="array" value="T_EXTENDS,T_IMPLEMENTS"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
        <properties>
            <property name="namespacesRequiredToUse" type="array" value="Dogma"/>
            <property name="fullyQualifiedKeywords" type="array" value="T_EXTENDS,T_IMPLEMENTS"/>
            <property name="allowFallbackGlobalFunctions" value="false"/>
            <property name="allowFallbackGlobalConstants" value="false"/>
            <property name="allowFullyQualifiedExceptions" value="true"/>
            <property name="allowPartialUses" value="false"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Typehints.TypeHintDeclaration">
        <properties>
            <property name="traversableTypeHints" type="array" value="Traversable"/>
            <property name="usefulAnnotations" type="array" value="@dataProvider,@deprecated,@internal,@see,@throws"/>
        </properties>
    </rule>

    <rule ref="Squiz.WhiteSpace.FunctionSpacing.After"/>

    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude-pattern>tests/</exclude-pattern><!-- @dataProvider etc. annotations trigger comments check -->
        <exclude name="Squiz.Commenting.FunctionComment.WrongStyle"/><!-- bullshit -->
    </rule>

    <rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName">
        <exclude-pattern>/exceptions/</exclude-pattern>
        <exclude-pattern>/tests/</exclude-pattern>
    </rule>

    <rule ref="Generic.Whitespace">
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed"/><!-- i like spaces -->
    </rule>

    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman">
        <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine"/><!-- ) { on separate line -->
    </rule>

    <rule ref="Generic.Commenting.Todo.TaskFound">
        <exclude name="Generic.Commenting.Todo.TaskFound"/>
    </rule>
</ruleset>
